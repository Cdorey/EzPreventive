@using EzNutrition.Client.Services;
@inherits LayoutComponentBase
@inject UserSessionService UserSession
@inject NavigationManager Navigation

<Layout Style="min-height: 100vh; ">
    @if (currentBreakpoint >= BreakpointType.Md)
    {
        <Sider>
            <Layout>
                <Header Style="color:white">
                    EzNutrition
                </Header>
                <Content>
                    <NavMenu />
                </Content>
            </Layout>
        </Sider>
    }
    else
    {
        <Header Style="height:auto">
            <GridRow Justify="space-between" OnBreakpoint="HandleBreakpoint">
                <GridCol>
                    <span style="color:white;">EzNutrition</span>
                </GridCol>
            </GridRow>
        </Header>
    }
    <Layout>
        <Content>
            <div class="site-layout-content">
                @Body
            </div>
            @* <BackTop/> *@
        </Content>
        <Footer Style="text-align: center;">
            @if (!string.IsNullOrEmpty(@UserSession.CaseNumber))
            {
                <p><a href="http://www.miit.gov.cn/" target="_blank">@UserSession.CaseNumber</a></p>
            }
        </Footer>
    </Layout>
</Layout>
<style>
    .site-layout-content {
        background: #fff;
        padding: 24px;
        min-height: 100%;
        margin: 16px;
        overflow: auto;
    }
</style>

@code {
    private BreakpointType currentBreakpoint;

    private void HandleBreakpoint(BreakpointType breakpoint)
    {
        currentBreakpoint = breakpoint;
    }

    private async void SignOut()
    {
        await UserSession.SignOutAsync();

        Navigation.NavigateTo("/");
    }

    protected override async Task OnInitializedAsync()
    {
        UserSession.AuthenticationStateChanged += (e) =>
        {
            StateHasChanged();
        };
        await UserSession.GetSystemInfoAsync();
        await base.OnInitializedAsync();
    }
}