@page "/"
@using EzNutrition.Client.Models;
@using EzNutrition.Client.Services;
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel
@using Markdig
@inject IHttpClientFactory HttpClientFactory
@inject UserSessionService UserSession
@inject ArchiveManageService ArchiveManager
@inject NavigationManager Navigator
<PageTitle>首页</PageTitle>
<AuthorizeView>
    <Authorized>
        <GridRow Justify="RowJustify.SpaceAround" Align="RowAlign.Middle" Gutter="(16,16)">
            <GridCol Lg="18" Md="24">
                <article>
                    @((MarkupString)Markdown.ToHtml(UserSession.Notice))
                </article>
            </GridCol>
            <GridCol Lg="6" Md="24">
                <Button Style="margin-bottom:12px" Type="@ButtonType.Primary" Block OnClick="@(()=>{Navigator.NavigateTo($"maintreatment/{ArchiveManager.NewArchive()}");})">开启咨询</Button>
                <Button Style="margin-bottom:12px" Block OnClick="@(()=>{Navigator.NavigateTo($"drisinsights");})">DRIs浏览器</Button>
            </GridCol>
        </GridRow>
    </Authorized>
    <NotAuthorized>
        <GridRow Gutter="(16,16)">
            <GridCol Xl="12" Xs="24">
                <Title Level="3">登录以开始</Title>
                <Alert Type="AlertType.Warning" Message="测试用户已关闭" Description="基于deepseek api辅助拟定健康教育和膳食指导方案草稿的功能已上线，BBS临时测试账户epiman已关闭，您可以通过注册并完成专业身份认证使用新功能模块" ShowIcon="true" Style="margin-bottom:16px" />
                <Form Model="@innerModel">
                    <ChildContent Context="formContext">
                        <FormItem>
                            <Input @bind-Value="@formContext.Username" />
                        </FormItem>
                        <FormItem>
                            <InputPassword @bind-Value="@formContext.Password" />
                        </FormItem>
                        <FormItem>
                            <Button Type="@ButtonType.Primary" OnClick="Login" AutoLoading>登录</Button>
                            <Button OnClick="@(()=>{Navigator.NavigateTo("register");})">注册</Button>
                        </FormItem>
                    </ChildContent>
                </Form>
                @if (!string.IsNullOrEmpty(errorInfo))
                {
                    <Alert Message=@errorInfo Type="@AlertType.Error" />
                }
            </GridCol>
            <GridCol Xl="12" Xs="24">
                <article>
                    @if (string.IsNullOrEmpty(UserSession.CoverLetter))
                    {
                        <Skeleton Active />
                    }
                    else
                    {
                        @((MarkupString)Markdown.ToHtml(UserSession.CoverLetter))
                    }
                </article>
            </GridCol>
        </GridRow>
    </NotAuthorized>
</AuthorizeView>

@code {
    public class Model
    {
        [Required, DisplayName("用户名")]
        public string? Username { get; set; }

        [Required, DisplayName("密码")]
        public string? Password { get; set; }
    }

    private Model innerModel = new Model();

    private string? errorInfo;

    protected override async Task OnInitializedAsync()
    {
        UserSession.AuthenticationStateChanged += (e) =>
        {
            StateHasChanged();
        };
        await base.OnInitializedAsync();
    }

    private async Task Login()
    {
        try
        {
            await UserSession.SignInAsync(innerModel.Username ?? string.Empty, innerModel.Password ?? string.Empty);
        }
        catch (Exception ex)
        {
            errorInfo = ex.Message;
        }
    }

    protected override void OnInitialized()
    {
        UserSession.OnStateChanged += StateHasChanged;
        base.OnInitialized();
    }

    public void Dispose()
    {
        UserSession.OnStateChanged -= StateHasChanged;
    }
}

