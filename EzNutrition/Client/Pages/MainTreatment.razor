@page "/maintreatment"
@using EzNutrition.Client.Services;
@using EzNutrition.Shared.Utilities;
@using EzNutrition.Shared.Data.Entities;
@using System.Text;
@inject HttpClient Http
@inject UserSessionService UserSession
@inject NavigationManager Navigation


<h3 class="mb-3">核心档案管理</h3>
<GridRow Gutter="(16,16)">
    <GridCol Xl="12" Md="24" Sm="24">
        <h4 class="mb-3">基本信息</h4>
        <Form Model="@UserInfo" LabelAlign="AntLabelAlignType.Left">
            <FormItem Label="姓名">
                <Input Placeholder="其实输不输都行，反正服务器不会存档和记录" id="name" class="form-control" @bind-Value="UserInfo.Name" />
            </FormItem>
            <FormItem Label="性别">
                <RadioGroup TValue="string" id="gender" @bind-Value="UserInfo.Gender" OnChange="OnEERsChanged">
                    <Radio RadioButton Value="@("男")">男</Radio>
                     <Radio RadioButton Value="@("女")">女</Radio>
                 </RadioGroup>
             </FormItem>
             <FormItem Label="年龄">
                 <AntDesign.InputNumber TValue="int" id="age" Step="1" @bind-Value="UserInfo.Age" OnChange="OnEERsChanged" Min="0" />
             </FormItem>
             <FormItem Label="PAL">
                 <RadioGroup id="pal" @bind-Value="UserInfo.PAL">
                     @foreach (var eer in UserInfo.AvailableEERs)
                    {
                        @if (eer.PAL != null)
                        {
                            <Radio RadioButton Value="@eer.PAL">@eer.PAL</Radio>
                        }
                    }
                </RadioGroup>
            </FormItem>
            <FormItem Label="身高">
                <Input id="height" @bind-Value="UserInfo.Height" type="number" min="0" />
            </FormItem>
            <FormItem Label="体重">
                <Input id="weight" @bind-Value="UserInfo.Weight" type="number" min="0" />
            </FormItem>
            <Button Type="@ButtonType.Primary" @onclick="OnCalculateBtnClick">计算</Button>
            <Button Type="@ButtonType.Dashed" @onclick="OnResetBtnClick">重置</Button>
        </Form>
    </GridCol>
    <GridCol Xl="12" Md="24" Sm="24">
        <h4 class="mb-3">概要</h4>
        @if (summary != null)
        {
            <div class="row">
                <div class="row mb-2">
                    <p>@summary</p>
                </div>
                @if (allocation != null)
                {
                    <AntDesign.InputNumber TValue="int" id="corEnergy" OnChange="OnCorrectEnergyChanged" PlaceHolder="如无需修正请留空" Step="50" Min="1000" />
                }
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    <h5 class="mb-3">键入咨询者的基本信息后点击计算……</h5>
                </div>
            </div>
        }
    </GridCol>
    @if (allocation != null)
    {
        <GridCol Span="24">
            <MedicalHistory AdviceDataChanged="AdviceDataChangedEventHandler" />
        </GridCol>

        <GridCol Span="24">
            <h4 class="mb-3">能量模型</h4>
        </GridCol>
        <GridCol Xl="12" Md="24" Sm="24">
            <h5>三餐能量分配</h5>
            <table class="table">
                <thead>
                    <tr>
                        <th>餐次</th>
                        <th>蛋白质(g)</th>
                        <th>碳水化合物(g)</th>
                        <th>脂肪(g)</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" class="form-control" placeholder="餐次" value="早餐" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="蛋白质" value="@allocation?.BreakfastProteinContent" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="碳水化合物" value="@allocation?.BreakfastCarbohydrateContent" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="脂肪" value="@allocation?.BreakfastFatContent" readonly /></td>
                    </tr>
                    <tr>
                        <td><input type="text" class="form-control" placeholder="餐次" value="午餐" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="蛋白质" value="@allocation?.LunchProteinContent" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="碳水化合物" value="@allocation?.LunchCarbohydrateContent" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="脂肪" value="@allocation?.LunchFatContent" readonly /></td>
                    </tr>
                    <tr>
                        <td><input type="text" class="form-control" placeholder="餐次" value="晚餐" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="蛋白质" value="@allocation?.DinnerProteinContent" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="碳水化合物" value="@allocation?.DinnerCarbohydrateContent" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="脂肪" value="@allocation?.DinnerFatContent" readonly /></td>
                    </tr>
                </tbody>
            </table>
        </GridCol>
        <GridCol Xl="12" Md="24" Sm="24">
            <h5>食物交换份</h5>
            <table class="table">
                <thead>
                    <tr>
                        <th>餐次</th>
                        <th>蛋白质</th>
                        <th>碳水化合物</th>
                        <th>脂肪</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" class="form-control" placeholder="餐次" value="早餐" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="蛋白质" value="@allocation?.BreakfastProteinPortions" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="碳水化合物" value="@allocation?.BreakfastCarbohydratePortions" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="脂肪" value="@allocation?.BreakfastFatPortions" readonly /></td>
                    </tr>
                    <tr>
                        <td><input type="text" class="form-control" placeholder="餐次" value="午餐" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="蛋白质" value="@allocation?.LunchProteinPortions" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="碳水化合物" value="@allocation?.LunchCarbohydratePortions" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="脂肪" value="@allocation?.LunchFatPortionst" readonly /></td>
                    </tr>
                    <tr>
                        <td><input type="text" class="form-control" placeholder="餐次" value="晚餐" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="蛋白质" value="@allocation?.DinnerProteinPortions" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="碳水化合物" value="@allocation?.DinnerCarbohydratePortions" readonly /></td>
                        <td><input type="text" class="form-control" placeholder="脂肪" value="@allocation?.DinnerFatPortions" readonly /></td>
                    </tr>
                </tbody>
            </table>
        </GridCol>
    }
    @if (@foodExchangeAllocation != null)
    {
        <GridCol Span="24">
            <h5>食物交换份品类及修正</h5>
        </GridCol>
        <GridCol Lg="8" Md="12" Sm="24">
            <div class="form-group">
                <label for="grain">谷薯类（自动计算）：</label>
                <input id="grain" class="form-control" type="number" min="0" value="@foodExchangeAllocation.GrainsAndStarchyFoods" readonly />
            </div>
        </GridCol>

        <GridCol Lg="8" Md="12" Sm="24">
            <div class="form-group">
                <label for="soy">豆乳类：</label>
                <input id="soy" class="form-control" type="number" min="0" @bind="@foodExchangeAllocation.LegumesAndDairyAlternatives" />
            </div>
        </GridCol>
        <GridCol Lg="8" Md="12" Sm="24">
            <div class="form-group">
                <label for="meat">肉蛋类（自动计算）</label>
                <input id="meat" class="form-control" type="number" min="0" value="@foodExchangeAllocation.MeatsAndEggs" readonly />
            </div>
        </GridCol>
        <GridCol Lg="8" Md="12" Sm="24">
            <div class="form-group">
                <label for="vegetable">蔬菜类：</label>
                <input id="vegetable" class="form-control" type="number" min="0" @bind="@foodExchangeAllocation.Vegetables" />
            </div>
        </GridCol>

        <GridCol Lg="8" Md="12" Sm="24">
            <div class="form-group">
                <label for="energy">能量类：</label>
                <input id="energy" class="form-control" type="number" min="0" @bind="@foodExchangeAllocation.EnergyFoodsOrFats" />
            </div>
        </GridCol>

        <GridCol Lg="8" Md="12" Sm="24">
            <div class="form-group">
                <label for="fruit">水果类：</label>
                <input id="fruit" class="form-control" type="number" min="0" @bind="@foodExchangeAllocation.Fruits" />
            </div>
        </GridCol>
    }

    @if (advices != null && advices.Count > 0)
    {
        <GridCol Span="24">
            <table class="table">
                <thead>
                    <tr>
                        <th>膳食建议</th>
                        <th>优先级</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var advice in advices)
                    {
                        <tr>
                            <td>@advice.Content</td>
                            <td>@advice.Priority</td>
                        </tr>
                    }
                </tbody>
            </table>
        </GridCol>
    }
</GridRow>

@code {
    private UserInfoModel UserInfo = new UserInfoModel();

    private string? summary;
    private MacronutrientAllocation? allocation;
    private FoodExchangeAllocation? foodExchangeAllocation;
    private List<Advice>? advices;
    public class UserInfoModel
    {
        public List<EER> AvailableEERs { get; set; } = new();
        public string? Name { get; set; }

        public string? Gender { get; set; }
        public int Age { get; set; } = 25;

        public decimal? PAL { get; set; }
        public decimal? Height { get; set; }
        public decimal? Weight { get; set; }
    }

    private async Task OnEERsChanged()
    {
        await FetchEERs();
    }


    private async Task FetchEERs()
    {
        if (UserSession.UserInfo == null)
        {
            Navigation.NavigateTo("/");
            return;
        }

        if (!string.IsNullOrEmpty(UserInfo.Gender) && UserInfo.Age >= 0)
        {
            try
            {
                UserInfo.AvailableEERs = await Http.GetAuthorizedJsonAsync<List<EER>>(UserSession.UserInfo.Token, $"Energy/EERs/{UserInfo.Gender}/{UserInfo.Age}") ?? UserInfo.AvailableEERs;
            }
            catch (HttpRequestException)
            {

            }
        }
    }


    private void OnCalculateBtnClick()
    {
        int CalculateEnergyFromBEE()
        {
            if (UserInfo.PAL is not null && UserInfo.Height is not null)
            {
                var eerWithBEE = UserInfo.AvailableEERs.FirstOrDefault(x => x.BEE != null);
                if (eerWithBEE?.BEE is not null)
                {
                    return EnergyCalculator.GetEnergy(UserInfo.Height.Value, eerWithBEE.BEE.Value, UserInfo.PAL.Value);
                }
            }
            return 0;
        }

        int CalculateEnergyFromPAL()
        {
            if (UserInfo.PAL is not null)
            {
                var eerWithPAL = UserInfo.AvailableEERs.FirstOrDefault(x => x.PAL == UserInfo.PAL);
                return eerWithPAL?.AvgBwEER ?? 0;
            }
            return 0;
        }

        if (UserInfo.PAL is not null)
        {
            var beeResult = CalculateEnergyFromBEE();
            var energy = beeResult == 0 ? CalculateEnergyFromPAL() : beeResult;
            //输出能量模型
            if (energy > 0)
            {
                var height = (UserInfo.Height ?? 0) / 100;
                var strBuild = new StringBuilder();
                if (height != 0 && UserInfo.Weight != null && UserInfo.Weight != 0)
                {
                    strBuild.Append($"BMI:{Math.Round((UserInfo.Weight.Value / height / height), 2)}，");
                }
                strBuild.AppendLine($"自动推断总能量{energy}kCal，依据：{(beeResult == 0 ? "基于人群平均体重和PAL的建议值" : "BW*BEE*PAL")}。");
                strBuild.AppendLine("如有需要请根据咨询者实际情况修正总能量，如无需修正请留空：");
                summary = strBuild.ToString();
                allocation = new MacronutrientAllocation(energy);
                foodExchangeAllocation = new FoodExchangeAllocation(allocation);
            }
        }
        else
        {
            summary = "PAL（活动强度）不应为0，请正确输入咨询对象性别、年龄等信息，并选择一个PAL";
        }

    }



    private void OnResetBtnClick()
    {
        //重置全部信息
        UserInfo = new();
        summary = null;
        allocation = null;
        foodExchangeAllocation = null;
        advices = null;
    }

    private void OnCorrectEnergyChanged(int newEnergy)
    {
        if (newEnergy > 0)
        {
            var height = (UserInfo.Height ?? 0) / 100;
            var strBuild = new StringBuilder();
            if (height != 0 && UserInfo.Weight != null && UserInfo.Weight != 0)
            {
                strBuild.Append($"BMI:{Math.Round((UserInfo.Weight.Value / height / height), 2)}，");
            }
            strBuild.AppendLine($"核定总能量{newEnergy}kCal，依据营养师修正。");
            strBuild.AppendLine("如有需要，可再次修正总能量，或点击上方计算按钮自动推断：");
            summary = strBuild.ToString();
            allocation = new MacronutrientAllocation(newEnergy);
            foodExchangeAllocation = new FoodExchangeAllocation(allocation);
        }
    }

    private void AdviceDataChangedEventHandler(List<Advice> newAdvices)
    {
        advices = newAdvices;
    }
}
